# POVME 2.0 Sample Input File

# First, we need to define a point field that entirely encompasses all trajectory pockets.
GridSpacing            2.0                                 # The distance, in Angstroms, between
                                                           # adjacent points. Making this number
                                                           # lower improves accuracy at the
                                                           # expense of compute time.



LoadPointsFilename    point_field.pdb.npy                      # You can optionally load previous point
                                                           # fields if you don't want to generate
							   # them using the comamnds above. Note
							   # that you should use the .pdb.npy file,
							   # not the pdb file.
                                                         
# Load the PDB trajectory file
PDBFileName                 ../PDBfiles/3jbu_wt.pdb                       # Load in the PDB trajectory file with
                                                           # the pocket you want to analyze.
                                                         
# Tell POVME how to identify points that are within the binding pocket.
DistanceCutoff              1.09                           # Any point that comes within this
                                                           # distance of any receptor atom's van der
							   # Waals surface will not be considered
							   # part of the pocket volume. 1.09
							   # Angstroms was chosen as the default
							   # value because that is the van der Waals
							   # radius of a hydrogen atom.

ConvexHullExclusion         false                          # Calculate the convex hull of receptor
                                                           # atoms near the pocket. Remove portions
							   # of the binding pocket that fall outside
							   # this convex hull. Setting this to false
							   # will speed up the calculation but may
                                                           # lead to inaccuracies in some cases.



ContiguousPointsCriteria    3                              # Two pocket volumes are considered
                                                           # "contiguous" if they share at least
							   # this number neighboring points in
							   # common. Note that points that are
							   # "kitty-corner" from each other count
							   # as neighbors.

# Tell POVME how to perform the calculations.
NumProcessors               1                             # POVME can use multiple processors on
                                                           # Unix-based systems.

UseDiskNotMemory            true                          # In some cases, your PDB trajectory may
                                                           # be so large that the resulting POVME
							   # analysis cannot be easily stored in
							   # your computer's memory. If
							   # UseDiskNotMemory is set to true, POVME
							   # will rely more on your disk space than
							   # on memory/RAM.

# Tell POVME how to save the output
OutputFilenamePrefix          ./POVME_test_run/POVME_      # All the files POVME outputs will start
                                                           # with this prefix. POVME automatically
							   # creates any required directory
							   # (./POVME_test_run/ in this case).

SaveIndividualPocketVolumes   true                         # If true, POVME saves the pocket-volume
                                                           # points of each frame to a separate PDB
							   # file. The file names will be like
							   # {PREFIX}frame_X.pdb.

SavePocketVolumesTrajectory   false                         # If true, POVME saves all the pocket-
                                                           # volume points of each frame to a single
							   # PDB trajectory file. The individual
							   # frames are separated by END cards. The
							   # file name will be
							   # {PREFIX}volume_trajectory.pdb.

OutputEqualNumPointsPerFrame  false                         # Some visualization programs (e.g. VMD)
                                                           # are only compatible with trajectories
							   # that have the same number of atoms in
							   # each frame. If EqualNumAtomsPerFrame is
							   # true, POVME adds extra points at the
							   # origin (0.0, 0.0, 0.0) to satisfy this
							   # requirement. This affects files created
							   # with both SaveIndividualPocketVolumes
							   # and SavePocketVolumesTrajectory but
							   # does not alter the volume calculation
							   # itself.

SaveTabbedVolumeFile          false                        # If true, POVME saves the calculated
                                                           # volumes to a file in a simple tabular
							   # format that can be easily pasted into
							   # popular spreadsheet programs like 
                                                           # Microsoft Excel. The file is named 
                                                           # {PREFIX}volumes.tabbed.txt

SaveVolumetricDensityMap      false                         # If true, POVME saves a volumetric
                                                           # density map in the DX format. A
							   # volumetric density value is associated
                                                           # with each of the pocket-occupying
							   # points by calculating the fraction of
							   # all trajectory pocket volumes that
							   # include the given point. The file is 
                                                           # named {PREFIX}volumetric_density.dx.

CompressOutput                true                         # If you're short on disk space, POVME
                                                           # can automatically compress all output
							   # files using gz compression.

